services:
  host:
  
  backend:
    env_file:
      - .env
    build: .
    container_name: robotics-bot-backend
    restart: unless-stopped
    stdin_open: true
    tty: true
    working_dir: /home/ws
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    volumes:
      - .:/home/ws
    environment:
      - DATABASE_URL=postgresql+psycopg2://postgres:postgres@db:5432/robotics_club
      - TG_BOT_TOKEN=${TG_BOT_TOKEN}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"

  bot:
    env_file:
      - .env
    build: .
    container_name: robotics-bot-bot
    restart: unless-stopped
    stdin_open: true
    tty: true
    working_dir: /home/ws
    command: ["python", "bot.py"]
    volumes:
      - .:/home/ws
    environment:
      - DATABASE_URL=postgresql+psycopg2://postgres:postgres@db:5432/robotics_club
      - TG_BOT_TOKEN=${TG_BOT_TOKEN}    
    depends_on:
      backend:
        condition: service_started

  terminal:
    env_file:
      - .env
    build: .
    stdin_open: true
    tty: true
    working_dir: /home/ws
    command: []
    volumes:
      - .:/home/ws

  db:
    env_file:
      - .env
    image: postgres:14
    container_name: robotics-bot-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: robotics_club
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
